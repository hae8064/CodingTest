//투포인터(다중 포인트) 알고리즘 방식 사용
//최대 반복 횟수 (queue1길이 * 3)만큼 돌려주면서, 한쪽 큐의 총합이 목표치보다 높을 시에는 queue1의 pointer를 놓여주면서 값을
//빼주고, 값이 작으면 queue2의 pointer 값을 높여주면서 값을 더해준다.

function solution(queue1, queue2) {
    let sumQ1 = sum(queue1),
        sumQ2 = sum(queue2);
    
    let pointer1 = 0,
        pointer2 = queue1.length;
    
    const target = (sumQ1 + sumQ2) / 2;
    const queue = [...queue1, ...queue2];
    
    const end = queue1.length * 3;
    
    for(let count = 0; count < end; count++){
        if(sumQ1 === target){
            return count;
        }
        
        if(sumQ1 > target) {
            sumQ1 -= queue[pointer1++];
        }else{
            sumQ1 += queue[pointer2++];
        }
    }
    return -1;
}

const sum = (arr) => arr.reduce((acc,v) => acc + v, 0);
