//가장 큰 길이를 뽑고 그 이후 중간 사이즈 크기
//가장 큰 길이 뺴고 나머지들 중 가장 큰 사이즈! 구하기
function solution(sizes) {
    var answer = 0;
    let maxNum = 0; 
    let minNum = 0;
    var minArr = [];       //작은 값 배열들
    
        //총 반복횟수 배열 자체의 크기   
    for(let i = 0; i < sizes.length; i++){
        
        //첫번째 인덱스 (가로길이)
        for(let j = 0; j < 1; j++){
            if(maxNum < sizes[i][j]){
                //가장 큰 수 
                maxNum = sizes[i][j];
            }
        }
        
        //두번째인덱스 (세로길이)
        for(let j = 1; j < 2; j++){
            if(maxNum < sizes[i][j]){
                maxNum = sizes[i][j];
            }
        }
        
        var array = sizes[i];
        minArr.push(Math.min.apply(null, array));            //배열에서 작은 값 넣어줌   
    }
    
      //minArr에서 가장 큰 값 구하기
    minNum = Math.max.apply(null, minArr)
    
    answer = maxNum * minNum;
    return answer;
}


===============================================
function solution(sizes) {
    const lower = [];
    const higher = [];
    sizes.map(([s0, s1]) => {
        if(s0 > s1){
            higher.push(s0);
            lower.push(s1);
        }else{
            lower.push(s0);
            higher.push(s1);
        }
    })
    return Math.max(...higher) * Math.max(...lower);
}
